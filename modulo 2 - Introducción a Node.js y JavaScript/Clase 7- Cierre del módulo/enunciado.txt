Vamos a simular una situación de trabajo para situarnos en un contexto. Estás trabajando como desarrollador de CodeAR S.A., una
reconocida software factory. En el equipo de trabajo contás con María y con Juan.

Maria

Es líder técnica del área. Es una persona muy ocupada y su rol consiste en traducir las necesidades del cliente a requerimientos 
técnicos.

Juan

Es pasante y está empezando en el mundo de la programación. Si bien es algo tímido, le gusta aprender cosas nuevas y encarar nuevos 
desafíos.

Vos

Si bien estás aprendiendo cosas como Juan, ya contás con algunos conocimientos previos.

María presenta al equipo un nuevo proyecto para una concesionaria de automóviles, cuya principal línea de negocios es la compra y venta 
de automóviles. La concesionaria necesita construir una lista con todos los vehículos que tiene registrados. Por cada vehículo necesita 
conocer la siguiente información:

Marca (Ford, Fiat, etc). (marca)
Modelo (Fiesta, Corolla, etc). (modelo)
Color (Azul, Rojo, etc). (color)
Año de fabricación. (año)
Cantidad de kilómetros recorridos. (km)
Precio final. (precio)
Cantidad de cuotas. (cuotas)
Patente. (patente)
Vendido: para indicar si el auto está o no vendido. (vendido)

María quiere saber con qué tipo de dato representarán a cada vehículo individual. Juan pensó en 3 opciones para el vehículo individual. 
¿Podrías ayudarlo a elegir la correcta?

----------------------------------------------------------------------------------------------------------------------------------------
1.

Juan menciona sus tres ideas para que lo ayudes a elegir la correcta. ¿Cuál de las siguientes ideas te parece la más correcta para 
representar un auto?


Una cadena de texto en formato JSON.

Un objeto literal con las propiedades de cada auto. (X)

Un array por cada auto.

----------------------------------------------------------------------------------------------------------------------------------------
2.

Juan pensó también en opciones para representar la lista. Las presentó de la siguiente manera en código. ¿Podrías ayudarlo una vez más 
a elegir la que te parezca correcta?


var autos = "";

let autos = [ [ ] ,[ ], [ ] ];

let autos = [ { }, { }, { } ]; (X)

let autos = { [ ], [ ], [ ] };

----------------------------------------------------------------------------------------------------------------------------------------

Aclarado el diseño del sistema. María tiene mucha experiencia, es súper profesional y está un paso adelante nuestro, por eso ella 
escribió en forma anticipada los tests de nuestro código, para asegurarse que el mismo funcione bien. Además, le pidió algunas tareas a 
Juan, quien te pregunta cómo él va a poder acceder a los objetos literales que vas a crear si el trabaja en otro archivo.

----------------------------------------------------------------------------------------------------------------------------------------
3.

Ahora que tenemos guardada la lista de vehículos, Juan se pregunta cómo hará el sistema para usar esa información dentro de diferentes 
archivos. María te consulta cuál sería la manera correcta de resolver la duda de Juan.


Usando la función "JSON.parse()".

Exportando el contenido de la variable mediante "module.exports" y requiriéndolo en los archivos que lo necesiten. (X)

Usando el método "fs.readFileSync()".

----------------------------------------------------------------------------------------------------------------------------------------
5.

¡Al fin es momento de codear!
En base a las definiciones técnicas tomadas con el equipo deberás declarar la variable autos. Esta debe contener los siguientes vehículos:

El primer auto es un Ford Fiesta Azul, del 2019, con 200 kilómetros, cuyo precio es 150000, disponible en 12 cuotas, con la patente 
APL123 que no está vendido.
El segundo auto es un Toyota Corolla Blanco, del 2019, 0 kilómetros, cuyo precio es 100000, disponible en 14 cuotas, con la patente 
JJK116 que no está vendido.
Cada auto debe tener los siguientes atributos: marca, modelo, precio, km, color, cuotas, anio, patente, vendido.

Luego de eso, deberemos exportar la variable con nuestro array

----------------------------------------------------------------------------------------------------------------------------------------
6.

A la semana, el proyecto avanza y María nos pide otro requerimiento, esta vez un poco más avanzado. Nos comenta que la concesionaria 
ahora necesita poder buscar los automóviles por patente y venderlos. Para esto, María nos encargó pensar la forma en que 
representaremos a la concesionaria.
Al terminar la reunión, Juan se acerca para comentarte tres ideas que tuvo. María, a unos metros, escuchó las opciones y te encargó 
definir cuál será la más eficaz.


Creo que podríamos agregar, dentro del archivo autos, dos closures que permitan buscar y marcar un auto como vendido.

Podríamos tener un objeto literal que represente a la concesionaria con los autos que creamos y que esta tenga las funcionalidades de 
buscar por patente y marcar como vendido un auto. (X)

Podríamos agregarle las funciones de buscar por patente, marcar como vendido y cualquier otra funcionalidad al archivo de autos. 
Incluso, si se agregan objetos literales como vendedores a la concesionaria, podemos (y es buena práctica) poner todo en el mismo 
archivo.

----------------------------------------------------------------------------------------------------------------------------------------

Ahora que tenemos creada nuestra lista de autos y definida la manera de representar nuestra concesionaria, necesitamos crearla. El 
objeto concesionaria va a conocer a todos los autos y va disponer de las funcionalidades de buscarlos y venderlos. Pero para no entrar 
en demasiado detalle, María propone trabajar en tres etapas y en cada una agregar valor. Respondé a las necesidades de cada etapa.

----------------------------------------------------------------------------------------------------------------------------------------
7.

Etapa 1

En esta primera etapa, necesitamos requerir tu módulo autos que se encuentra en la misma carpeta del archivo donde estás trabajando.

Además, necesitarás crear un objeto literal llamado concesionaria que contendrá todas las funcionalidades que el cliente solicita.

Por último, nuestro objeto literal debe tener un atributo llamado autos que contenga la lista de automóviles importada anteriormente.

----------------------------------------------------------------------------------------------------------------------------------------
8.

Etapa 2
Ahora que la concesionaria tiene los autos, es posible crear la funcionalidad buscarAuto que reciba por parámetro la patente y devuelva 
el auto al cual le corresponde. En caso de no encontrar el mismo, deberá retornar null.

Para que todo funcione tenés que agregar el código que escribiste en el ejercicio anterior.

----------------------------------------------------------------------------------------------------------------------------------------
9.

Etapa 3
Ahora, María les pide que agreguen la funcionalidad de venderAuto que recibe la patente y, en caso de encontrar al automóvil, le asigna 
el estado de vendido.

¿Cómo lo resuelven?

Recordatorio: Para comenzar tenés que agregar el código que escribiste en el ejercicio anterior. Para resolver esta nueva 
funcionalidad, tendrás que utilizar la función buscarAuto.

----------------------------------------------------------------------------------------------------------------------------------------
10.

Funcionalidad extra
La primera es poder contar, como concesionaria, con la habilidad de poder tener la lista de autos para la venta. A lo cual, María, cree 
que es una tarea sencilla que Juan y vos pueden encarar solos, usando la función autosParaLaVenta, aunque por las dudas ella les 
recuerda que no deberían de aparecer los autos que ya fueron vendidos.

Para comenzar, tenés que agregar el código que escribiste en el ejercicio anterior. Tené en cuenta que estamos optimizando nuestro 
código, por lo cual, deberíamos utilizar el método filter.

----------------------------------------------------------------------------------------------------------------------------------------
11.

Una nueva funcionalidad extra
María, contenta con el trabajo que realizaron, les pide otra funcionalidad extra. Resulta que a la concesionaria le suelen preguntar 
muy seguido cuáles de los autos para la venta son 0 km. Tené en cuenta que María considera que un auto 0 km es aquel que tenga un 
kilometraje menor a 100. Vas a tener que desarrollar la funcionalidad autosNuevos.

¿Cómo podés resolver esto reutilizando la función autosParaLaVenta?

Para comenzar, tenés que agregar el código que escribiste en el ejercicio anterior.

----------------------------------------------------------------------------------------------------------------------------------------

Luego de terminar un largo y exitoso día, volvés a tu casa a descansar. Al día siguiente, al volver al trabajo, ves a María con un café 
en la mano: estuvo trabajando toda la noche adelantando cosas y necesita que le des una mano en unas funcionalidades particulares que 
faltan resolver.

----------------------------------------------------------------------------------------------------------------------------------------
12.
El cliente le pidió saber cuánto dinero generaron las ventas.

María te pide que completes la función listaDeVentas que devuelve una lista que contiene el precio de venta de cada auto vendido. A 
esto, Juan, que está al lado tuyo, se le escapa la frase "mmm.....estoy seguro que alguna función de arrays nos va a servir, pero no me 
acuerdo".

Para comenzar tenés que agregar el código que escribiste en el ejercicio anterior.

----------------------------------------------------------------------------------------------------------------------------------------
13.

Total de ventas
Terminada esta función, María te pide que resuelvas la funcionalidad de totalDeVentas, que justamente nos devuelva la sumatoria del 
valor de todas las ventas realizadas. Acá el único requerimiento técnico explícito es que utilices la función reduce, ¡a codear!

----------------------------------------------------------------------------------------------------------------------------------------
14.

Agregando funcionalidades
Muy contento el equipo por cómo viene el desarrollo, por la tarde, María te comenta que se agrega una funcionalidad muy importante: la 
de verificar si una persona puede comprar o no un auto. Esta permite al sistema definir si una persona al consultar por un auto, puede 
comprarlo. Las personas solo sacan los autos en cuotas y tomando dos factores como condición de compra. Una es el costo total: si el 
total de un auto excede lo que la persona considera caro, no va a comprar el auto. Otra condición es su capacidad de pago en cuotas: si 
la capacidad de pago en cuotas supera al costo de la cuota, va a poder pagarlo. Si ambas condiciones se cumplen, se realiza la compra.

Es por esto que María te pide que desarrolles la función puedeComprar que reciba por parámetro un auto y una persona y devuelva true si 
la misma puede comprar el auto.

Una persona va a ser representada mediante un objeto literal de la siguiente forma:

{
nombre: “Juan”,
capacidadDePagoEnCuotas: 20000,
capacidadDePagoTotal: 100000
}

Para comenzar tenés que agregar el código que escribiste en el ejercicio anterior

----------------------------------------------------------------------------------------------------------------------------------------
